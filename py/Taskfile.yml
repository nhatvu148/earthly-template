version: "3"

env:
  ENV: testing

dotenv: [".env", "{{.ENV}}/.env", "{{.HOME}}/.env"]

vars:
  VENV_BIN_DIR: venv/bin
  PIP: "{{.VENV_BIN_DIR}}/pip"
  PYTHON: "{{.VENV_BIN_DIR}}/python"

silent: true

tasks:
  check-env:
    desc: "Check environment variables"
    dotenv: [".env", "{{.ENV}}/.env", "{{.HOME}}/.env"]
    env:
      KEYNAME: DIFFERENT_VALUE
    cmds:
      - echo "Using $KEYNAME and endpoint $ENDPOINT, from $ENV"

  venv:
    desc: "Create a virtual environment and install requirements"
    cmds:
      - python3 -m venv venv
      - "{{.PIP}} install -r requirements.txt"

  oauth-session:
    aliases: [oases]
    desc: "Run the oauth_session.py script"
    deps: [venv]
    cmds:
      - "{{.PYTHON}} src/oauth_session.py"

  upload:
    desc: "Upload image using Docker and redirect output to a log file"
    cmds:
      - docker run --rm upload-gdrive-image:latest python3 upload_gdrive.py > output.log 2>&1
  
  update-env:
    aliases: [upen]
    cmds:
      - "{{.PYTHON}} src/update_env.py"

  copy-upload-file:
    aliases: [coupfi]
    cmds:
      - mkdir -p ./data
      - cp "{{.FILE_DIR}}/{{.FILE_NAME}}" "./data/{{.FILE_NAME}}"

  upload-gdrive:
    aliases: [upgd]
    cmds:
      - cp "{{.FILE_DIR}}/{{.FILE_NAME}}" "{{.DEST_DIR}}/{{.FILE_NAME}}"
      # - earthly -iP +upload-gdrive

  run-upload:
    aliases: [ruup]
    cmds:
      - task: upen
      # - task: coupfi
      - task: upgd

  up:
    deps: [upen, upgd]

  check-py:
    deps: [venv]
    cmds:
      - "{{.PYTHON}} -m autopep8 --in-place --aggressive --recursive src"
      - "{{.PYTHON}} -m flake8 --ignore=E501 src"

  polars:
    cmds:
      - "{{.PYTHON}} src/test_polars.py"