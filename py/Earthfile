VERSION 0.8
FROM python:3
WORKDIR /app

deps:
    RUN pip install wheel
    COPY requirements.txt ./
    RUN pip wheel -r requirements.txt --wheel-dir=wheels
    SAVE ARTIFACT wheels /wheels

build:
    FROM +deps
    COPY src src
    SAVE ARTIFACT src /src

docker:
    COPY +deps/wheels wheels
    COPY +build/src src
    COPY requirements.txt ./
    ARG tag='latest'
    RUN pip install --no-index --find-links=wheels -r requirements.txt
    ENTRYPOINT ["python3", "./src/hello.py"]
    SAVE IMAGE python-example:$tag

hush:
    RUN --secret passwd echo "my password is $passwd"

generate-phrase:
    RUN curl https://raw.githubusercontent.com/jsvine/markovify/master/test/texts/sherlock.txt > /app/sherlock.txt
    COPY src/generate_phrase.py src/utils.py .
    RUN pip3 install markovify
    ARG NO_CACHE
    RUN --no-cache=$NO_CACHE python3 generate_phrase.py
    SAVE ARTIFACT output.txt AS LOCAL output.txt

upload-gdrive:
    FROM +deps
    COPY src/ .
    COPY requirements.txt .env ./
    RUN pip install --no-index --find-links=wheels -r requirements.txt
    SAVE IMAGE upload-gdrive-image:latest
    # ARG NO_CACHE
    # RUN --no-cache=$NO_CACHE python3 upload_gdrive.py

test-upload-gdrive:
    FROM docker:27.3.1-dind
    RUN apk add curl
    WITH DOCKER --load upload-gdrive-image:latest=+upload-gdrive
        RUN --no-cache docker run --rm upload-gdrive-image:latest python3 upload_gdrive.py
    END

get-token:
    FROM +deps
    COPY src/ .
    COPY requirements.txt .env ./
    RUN pip install --no-index --find-links=wheels -r requirements.txt
    ARG NO_CACHE
    RUN --no-cache=$NO_CACHE python3 get_token.py
    SAVE ARTIFACT access_token_response.json AS LOCAL access_token_response.json

refresh-token:
    FROM +deps
    COPY src/ .
    COPY requirements.txt .env access_token_response.json ./
    RUN pip install --no-index --find-links=wheels -r requirements.txt
    ARG NO_CACHE
    RUN --no-cache=$NO_CACHE python3 refresh_token.py
    SAVE ARTIFACT refresh_token_response.json AS LOCAL refresh_token_response.json

server:
    COPY src/server.py .

test:
    FROM docker:27.3.1-dind
    RUN apk add curl
    WITH DOCKER --load server:latest=+server
        RUN docker run --rm -d --network=host server:latest python3 server.py && sleep 5 && curl -s localhost:8000 | grep Hello
    END
    # RUN false # interactive debugger

    # WITH DOCKER --load server:latest=+server
    #     RUN docker run -v ./screenshots:/screenshots ... && \
    #         docker logs ... >./full-logs.txt && \
    #         docker inspect ... >./some-docker-state.json
    # END
    # SAVE ARTIFACT ./screenshots
    # SAVE ARTIFACT ./full-logs.txt
    # SAVE ARTIFACT ./some-docker-state.json

# all:
#     BUILD +build
#     BUILD +docker
#     BUILD +unit-test
#     BUILD +integration-test